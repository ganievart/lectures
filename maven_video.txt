Maven - фреймоврк, сборщик проектов в xml формате от Apache;
Декларативная модель сборки проектов.
В Maven жесткая структура каталогов в отличии от Ant.
Антовский билдинг это все печально.
http://maven.apache.org

Главные принципы:
Выходом проекта всегда является один файл: jar, war etc
Фазы проекта заданы жестко, все имеет какие-то дефолты.

Встроенна поддержка системы контроля версий.
Каждый проект называется артефактом:
	у каждого есть groupid - пакет
	<artifactid>-<version> - название проекта
	обеспечивает уникальное название проекта.
	
	все фреймворки имеют groupid и artefactid, проект автоматически целяет  нужные фреймворки
	
	репозиторий:
		1. есть центральный репозиторий
		2. есть и личные репозитории
		
		jar - java archive собираются только классы, но возможно еще и манифесты
		war - веб архив, это хтмл, искмл и так далее. Все кладется в каталог webinf и так далее
		ear - enterpice archive - малораспространенные вещи, жуткосложная структура.
		
	все команды начинаются как mvn <command>
					-clean
					-compile
								
	Фазы для jar файла:
	procces-resourses копируются файлы и фильтруются переменные
	compile - комплириует проект
	process-test-resourses
	test-compile (JUnit тесты)
	test - запустить тесты
	package - выполнить все предыдущие фазы, можно пропустить это дополнительными ключами.
	install - копирование jar в нужный каталог на сервер
	deploy - запуск

	все эти фазы имеют свои дефолты, даже если ничего не написано, то jar обязательно сбилдится.
	project-object-model - pom.xml
	maven не разрешает цикличные зависимости.

	~/.m2/repository - локальный репозиторий.


	Стандартная структура каталога.
	- в корне лежит pom файл
	- license.txt 
	- readme.txt
	- src (все что должно создаваться в maven проектах должно содержаться в src)
	- src/site 
	- src/main/java - исходный код проекта, если положить куда-то не туда, то ничего не скомпилится.
	- src/test (без unit тестов проект не комплируется)

	
Минимальный проектный файл Maven (helloworld.pom)
helloworld/pom.xml
<project>
	<groupId>eu.it-sudparis</groupId>
	<artefactId>helloworld</artifactId>
	<packaging>pom</packaging>
	<version>0.1-SNAPSHOT</version>
	<name>Hello world example</name>
	<modules>
		<module>first-sub-module</module>
		<module>second-sub-module</module>
	</modules>
	...
</project>

- mvn install copies pom.xml to ~/.m2/repository/helloworld/pom.xml

groupid всегда зависит от parent

описание dependency
<dependencies>
	<dependency>
		<groupId>junit</groupid>
		<artefactid>junit<artefactid>
		<version>4.0</version>
		<scope>test</scope>
	</dependency>
</dependencies>

Доступные scope:
-compile - всегда
-provided - не нужен
-runtime - комплируется и тесты без него, но в runtime нужен
-test - означает artefactid уже в systemPath
-system






